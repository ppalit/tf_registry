rmname: 'NEW Module'

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    - name: Create JSON Payload
      run: |
          payload=$(cat <<EOF
          {
            "data": {
                "type": "registry-modules",
                "attributes": {
                  "name": "storage-account",
                  "provider": "azurerm",
                  "registry-name": "private",
                  "no-code": true
                  }
            }
          }
          EOF
          )
          echo "$payload" > payload.json
          
          payloadFile="payload.json"      
          response=$(curl --header "Authorization: Bearer ${{ secrets.TERRAFORM_API }}" \
                          --header "Content-Type: application/vnd.api+json" \
                          --request POST \
                          --data @$payloadFile \
                         https://app.terraform.io/api/v2/organizations/smbcgroup/registry-modules)
          
          echo "$response" > response.json
          
          uploadLink=$(jq -r '.data.links.upload' response.json)
          echo "uploadLink=$uploadLink" >> $GITHUB_ENV

    - name: Echo Module Link
      run: echo "${{ env.uploadLink }}"
